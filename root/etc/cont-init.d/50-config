#!/usr/bin/with-contenv bash

# File which indicates that full init was already done before
FLAG_FILE=/config/donotdelete

HOOKS_DIR=(init route-up route-pre-down up down client-connect client-disconnect learn-address tls-verify auth)
OVPN_DIR=(ccd client server)

FIRST_SETUP=0

# Check if we need initial setup
if [ ! -e "$FLAG_FILE" ]; then 
	FIRST_SETUP=1

	# Full setup is required
	touch $FLAG_FILE

	# Copy defaults to config (if not exist)
	echo "Copying defaults"
	cp -R -u /defaults/* /config
fi

# Setup log
if [ ! -e "/config/log" ]; then
	echo "Creating /config/log"
	mkdir -p /config/log
	touch /config/log/openvpn.log
fi

# Setup hooks
if [ ! -e "/config/hooks" ]; then
	echo "Creating /config/hooks"
	mkdir -p /config/hooks
fi
# Check for each hook if exists
for h in "${HOOKS_DIR[@]}"; do
	if [ ! -e "/config/hooks/$h" ]; then
		echo "Creating /config/hooks/$h"
		mkdir /config/hooks/$h
	fi
done

# Setup openvpn
if [ ! -e "/config/openvpn" ]; then
	echo "Creating /config/openvpn"
	mkdir -p /config/openvpn
fi
# Check for each dir if exists
for h in ${OVPN_DIR[@]}
do
	if [ ! -e "/config/openvpn/$h" ]; then
		echo "Creating /config/openvpn/$h"
		mkdir /config/openvpn/$h
	fi
done

# Setup easy-rsa
if [ ! -e "/config/ssl" ]; then
	echo "Setting up /config/ssl"
	mkdir -p /config/ssl
	#cp -R -u $EASYRSA/openssl-easyrsa.cnf $EASYRSA_SSL_CONF
	cp -R -u $EASYRSA/vars.example /config/ssl/vars
else
	#if [ ! -e "$EASYRSA_SSL_CONF" ]; then
	#	cp -R -u $EASYRSA/openssl-easyrsa.cnf $EASYRSA_SSL_CONF
	#fi
	if [ ! -e "/config/ssl/vars" ]; then
		cp -R -u $EASYRSA/vars.example /config/ssl/vars
	fi
fi
if [ -e "/config/pki" ]; then
	# Create CRL file, if it can
	if [ ! -e "/config/pki/crl.pem" ]; then
		touch /config/pki/crl.pem
	fi
fi

# Setup module
if [ ! -e "/config/module" ]; then
	echo "Creating /config/module"
	mkdir /config/module
fi

# Setup backup
if [ ! -e "/config/backup" ]; then
	mkdir /config/backup
fi

# Setup tmp
if [ ! -e "/config/tmp" ]; then
	mkdir /config/tmp
fi

# Build include-server.conf
INC_SERVER_FILE=/config/include-server.conf
echo "#" > $INC_SERVER_FILE
echo "# DO NOT EDIT" >> $INC_SERVER_FILE
echo "# Autogenerated file, based on /config/openvpn/server" >> $INC_SERVER_FILE
echo "#" >> $INC_SERVER_FILE
echo "" >> $INC_SERVER_FILE

for file in /config/openvpn/server/*.conf
do
	[ -e "$file" ] || continue

	echo "config $file" >> $INC_SERVER_FILE
done

# Change permissions only on initial setup
if [ $FIRST_SETUP -eq 1 ]; then
	echo "Fixing permissions"

	# Set permissions
	chown -R abc:abc /config
fi