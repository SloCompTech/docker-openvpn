#!/bin/bash

#
#   OpenVPN PKI configuration script
#
#   @see https://community.openvpn.net/openvpn/wiki/EasyRSA3-OpenVPN-Howto
#   @see https://forums.openvpn.net/viewtopic.php?t=20837
#   @see https://securitronlinux.com/bejiitaswrath/how-to-create-keys-with-easy-rsa-without-a-password-prompt/
#
#

# User permission fix
if [ "$USER" != "abc" ]; then
  RUNAS="sudo -E -u abc"
else
  RUNAS=""
fi

function usage() {
  echo "Usage: ovpn_pki COMMAND"
  echo ""
  echo "Commands:"
  echo "  delete|remove      # Removes PKI"
  echo "  init [nopass]      # Init PKI"
}

if [ $# -lt 1 ] || [ "$1" == "help" ] || [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
  usage
  exit 1
fi


#
#   Init CA
#
function init() {
  if [ -d "$EASYRSA_PKI" ]; then
    read -p "PKI directory already exists. You will LOSE all files in your PKI. Are you SURE to init PKI again ? [y/N]: " decission
    decision="$(echo $decision | tr '[:upper:]' '[:lower:]')" # Convert to lowercase
    if [ "$decision" != "y"] && [ "$decision" != "yes" ]; then
      exit 0
    fi
    rm -rf $EASYRSA_PKI
  fi

  # Init PKI
  $RUNAS easyrsa init-pki

  # Build dh.pem
  $RUNAS easyrsa gen-dh

  # Build CA
  echo "Now it will build CA files for issuing new certifiactes"
  echo "Please protect ca.key with secure password (used for signing new certs)"
  echo "ca.key is needed only for signing new certificates, not for OpenVPN to work"
  $RUNAS easyrsa build-ca ${@:1}

  # Build server key
  $RUNAS easyrsa build-server-full server nopass
  $RUNAS easyrsa sign-req server server
  rm $EASYRSA_PKI/reqs/server.req

  # Generate ta.key (for tls-auth,tls-crypt)
  $RUNAS openvpn --genkey --secret $EASYRSA_PKI/ta.key

  # Generate CRL
  $RUNAS easyrsa gen-crl
}

cmd="$(echo $1 | tr '[:upper:]' '[:lower:]')"
if [ "$cmd" == "init" ]; then
  init ${@:2}
elif [ "$cmd" == "remove"] || [ "$cmd" == "delete" ]; then
  if [ ! -d "$EASYRSA_PKI" ]; then
    exit 0
  fi
  read -p "Are you sure to remove PKI ? [y/N]: " decision
  decision="$(echo $decision | tr '[:upper:]' '[:lower:]')" # Convert to lowercase
  # Check if operation aborted
  if [ "$decision" == "y" ] && [ "$decision" == "yes" ]; then
    rm -rf $EASYRSA_PKI
  fi
else
  usage
  exit 1
fi
